{"version":3,"sources":["components/Header.js","components/Card/CardObject.js","components/Pagination.js","components/Card/CurrentCard.js","components/Cards/Navigation.js","components/Cards/CardsTable.js","components/Login.js","components/OneTimePassword.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","cardTable","className","to","currentPage","this","backButton","React","Component","CardObject","card","id","imageUrl","name","artist","src","alt","Pagination","totalCount","pageSize","pages","getPreviousPage","bind","getNextPage","setPage","axios","get","params","page","types","type","subtype","then","res","setCards","data","cards","setState","headers","catch","e","console","warn","reduce","preVal","index","push","filter","length","event","Number","target","textContent","concat","map","onClick","CurrentCard","currentCard","link","window","location","href","split","attacks","damage","cost","text","Navigation","cardTypes","cardTypesCopy","cardSubTypes","cardSubTypesCopy","currentType","currentSubType","subTypeListVisible","typeListVisible","setTypeCards","setSubTypeCards","toggleSubTypeList","toggleTypeList","setSubTypeInput","setTypeInput","filterSubTypes","filterTypes","choiceSubtype","choiceType","subtypes","value","subTypes","stopPropagation","JSON","parse","stringify","toUpperCase","match","typesArray","subTypesArray","typeFilterField","placeholder","onChange","subTypeFilterField","typesList","subType","subtypesList","typesCopy","subtypesCopy","typeFilter","subTypeFilter","CardTable","setTypes","setSubTypes","setCurrentPage","previousCards","CardObjects","key","Login","login","password","currentLogin","currentPassword","accept","setLogin","setPassword","localStorage","setItem","getItem","button","onKeyUp","OneTimePassword","otpPassword","otpGenerator","generate","digits","alphabets","upperCase","specialChars","alert","App","exact","path","from","Boolean","hostname","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a72447cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Header.scss'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Header extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        const cardTable = <div className=\"header-card_table\">\r\n                                <Link to=\"/login\" className=\"header-logout\">Logout</Link>\r\n                          </div>\r\n        const currentPage = <div className=\"header-current_page\">\r\n                                <Link to=\"/cards\" className=\"header-back\">&#8249; Back</Link>\r\n                                <Link to=\"/login\" className=\"header-logout\">Logout</Link>\r\n                            </div>\r\n        return (<div>{this.props.backButton ? currentPage : cardTable}</div>)\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport '../../styles/CardObject.scss'\r\n\r\nexport class CardObject extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        const { id, imageUrl, name, artist } = this.props.card;\r\n        return (\r\n            <div>\r\n                <Link to={`/cards/${id}`} className=\"card\" id={`card-${id}`}>\r\n                    <img className=\"card-image\" src={imageUrl} alt={name}/>\r\n                    <div className=\"card-description\">\r\n                        <p className=\"card-description-title\">{name}</p>\r\n                        <p className=\"card-description-subtitle\">{artist}</p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport '../styles/Pagination.scss'\r\nimport axios from \"axios\";\r\n\r\nexport class Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { currentPage: 1, totalCount: 0, pageSize: 0, pages: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] }\r\n        this.getPreviousPage = this.getPreviousPage.bind(this)\r\n        this.getNextPage = this.getNextPage.bind(this)\r\n        this.setPage = this.setPage.bind(this)\r\n    }\r\n\r\n    getPreviousPage() {\r\n        if(this.state.currentPage > 1) {\r\n            this.props.currentPage(this.state.currentPage - 1)\r\n            axios.get(`https://api.pokemontcg.io/v1/cards`, { params: { page: this.state.currentPage - 1, types: this.props.type, subtype: this.props.subtype }})\r\n                .then(res => {\r\n                    this.props.setCards(res.data.cards)\r\n                    this.setState({ totalCount: res.headers['total-count'] })\r\n                    this.setState({ pageSize: res.headers['page-size'] })\r\n                    })\r\n                .catch(e => { console.warn(e) })\r\n            this.setState((state) => ({ currentPage: state.currentPage - 1 }))\r\n            if(this.state.pages[0] !== 1) this.setState((state) => ({ pages: state.pages = state.pages.reduce(function(preVal, page, index) {\r\n                if(index === 0) {\r\n                    preVal.push(state.pages[0] - 1)\r\n                    preVal.push(page)\r\n                } else preVal.push(page)\r\n                return preVal\r\n                }, []).filter((page, index, pages) => index !== pages.length - 1)}))\r\n        }\r\n    }\r\n\r\n    setPage(event) {\r\n        this.props.currentPage(Number(event.target.textContent))\r\n        axios.get(`https://api.pokemontcg.io/v1/cards`, { params: { page: Number(event.target.textContent), types: this.props.type, subtype: this.props.subtype }})\r\n            .then(res => {\r\n                this.props.setCards(res.data.cards)\r\n                this.setState({ totalCount: res.headers['total-count'] })\r\n                this.setState({ pageSize: res.headers['page-size'] })\r\n            })\r\n            .catch(e => { console.warn(e) })\r\n        this.setState((state) => ({ currentPage: Number(event.target.textContent)}))\r\n    }\r\n\r\n    getNextPage() {\r\n        this.props.currentPage(this.state.currentPage + 1)\r\n        axios.get(`https://api.pokemontcg.io/v1/cards`, { params: { page: this.state.currentPage + 1, types: this.props.type, subtype: this.props.subtype }})\r\n            .then(res => {\r\n                this.props.setCards(res.data.cards)\r\n                this.setState({ totalCount: res.headers['total-count'] })\r\n                this.setState({ pageSize: res.headers['page-size'] })\r\n            })\r\n            .catch(e => { console.warn(e) })\r\n        this.setState((state) => ({ currentPage: state.currentPage + 1 }))\r\n        if(this.state.currentPage + 1 > this.state.pages.length) this.setState((state) => ({ pages: state.pages = state.pages.concat([state.pages[state.pages.length - 1] + 1]).filter((page, index) => index !== 0) }))\r\n    }\r\n\r\n    render() {\r\n        const pages = this.state.pages.map(page => <span className={this.state.currentPage === page ? \"pagination-control-page_control-pages-active_page\" : \"pagination-control-page_control-pages-current_page\"} onClick={this.setPage}>{page}</span>)\r\n        return (\r\n            <div className=\"pagination\">\r\n                <div className=\"pagination-control\">\r\n                    <div className=\"pagination-control-page_control\">\r\n                        <span className=\"pagination-control-page_control-button\" onClick={this.getPreviousPage}>&#8249;</span>\r\n                        <div className=\"pagination-control-page_control-pages\">{pages}</div>\r\n                        <span className=\"pagination-control-page_control-button\" onClick={this.getNextPage}>&#8250;</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pagination-total_counts\">\r\n                    <span>{this.props.pageSize ? this.props.pageSize : this.state.pageSize}</span>\r\n                    <span>{this.props.totalCount ? this.props.totalCount : this.state.totalCount}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport '../../styles/CurrentCard.scss'\r\nimport axios from \"axios\";\r\n\r\nexport class CurrentCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { currentCard: null }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const link = window.location.href.split('/')\r\n        axios.get(`https://api.pokemontcg.io/v1/cards`, { params: { id: link[link.length - 1] } })\r\n            .then(res => {\r\n                this.setState( { currentCard: res.data.cards })\r\n            })\r\n            .catch(e => { console.warn(e) })\r\n    }\r\n\r\n    render() {\r\n        let page = null\r\n        if(this.state.currentCard && this.state.currentCard.length) page = this.state.currentCard.map(card =>\r\n            <div className=\"current_card\">\r\n                <div className=\"current_card-content\">\r\n                    <img className=\"current_card-content-image\" src={card.imageUrl} alt={card.name}/>\r\n                    <div className=\"current_card-content-specifications\">\r\n                        <div className=\"current_card-content-specifications-main\">\r\n                            <div className=\"current_card-content-specifications-main-text\">\r\n                                <span className=\"current_card-content-specifications-main-text-title\">Name:</span>\r\n                                <span className=\"current_card-content-specifications-main-text-value\">{card.name}</span>\r\n                            </div>\r\n                            <div className=\"current_card-content-specifications-main-text\">\r\n                                <span className=\"current_card-content-specifications-main-text-title\">Type:</span>\r\n                                <span className=\"current_card-content-specifications-main-text-value\">{card && card.types && card.types.length ? card.types[0] : null}</span>\r\n                            </div>\r\n                            <div className=\"current_card-content-specifications-main-text\">\r\n                                <span className=\"current_card-content-specifications-main-text-title\">SubType:</span>\r\n                                <span className=\"current_card-content-specifications-main-text-value\">{card.subtype}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"current_card-content-specifications-parameters\">\r\n                            <div className=\"current_card-content-specifications-parameters-text\">\r\n                                <span className=\"current_card-content-specifications-parameters-text-title\">attackDamage:</span>\r\n                                <span className=\"current_card-content-specifications-parameters-text-value\">{card.attacks && card.attacks.length ? card.attacks[0].damage : null}</span>\r\n                            </div>\r\n                            <div className=\"current_card-content-specifications-parameters-text\">\r\n                                <span className=\"current_card-content-specifications-parameters-text-title\">attackCost:</span>\r\n                                <span className=\"current_card-content-specifications-parameters-text-value\">\r\n                                    {card.attacks && card.attacks.length ? <div className=\"current_card-content-specifications-parameters-text-value-cost\">\r\n                                        {card.attacks[0].cost.map(cost => <p className=\"current_card-content-specifications-parameters-text-value-cost-value\">{cost}</p>)}\r\n                                    </div> : null}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"current_card-content-specifications-parameters-text\">\r\n                                <span className=\"current_card-content-specifications-parameters-text-title\">resistances:</span>\r\n                                <span className=\"current_card-content-specifications-parameters-text-value\">{null}</span>\r\n                            </div>\r\n                            <div className=\"current_card-content-specifications-parameters-text\">\r\n                                <span className=\"current_card-content-specifications-parameters-text-title\">evolvesFrom:</span>\r\n                                <span className=\"current_card-content-specifications-parameters-text-value\">{null}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"current_card-content-description\">{card && card.text ? card.text.map(text => <span className=\"current_card-content-description-text\">{text}</span>) : null}</div>\r\n            </div>)\r\n        return (\r\n            <div>{page}</div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport '../../styles/Navigation.scss'\r\nimport axios from \"axios\";\r\n\r\nexport class Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cardTypes: [],\r\n            cardTypesCopy: [],\r\n            cardSubTypes: [],\r\n            cardSubTypesCopy: [],\r\n            cards: [],\r\n            totalCount: 0,\r\n            pageSize: 0,\r\n            currentType: 'Types',\r\n            currentSubType: 'Subtypes',\r\n            subTypeListVisible: false,\r\n            typeListVisible: false,\r\n        }\r\n        this.setTypeCards = this.setTypeCards.bind(this)\r\n        this.setSubTypeCards = this.setSubTypeCards.bind(this)\r\n        this.toggleSubTypeList = this.toggleSubTypeList.bind(this)\r\n        this.toggleTypeList = this.toggleTypeList.bind(this)\r\n        this.setSubTypeInput = this.setSubTypeInput.bind(this)\r\n        this.setTypeInput = this.setTypeInput.bind(this)\r\n        this.filterSubTypes = this.filterSubTypes.bind(this)\r\n        this.filterTypes = this.filterTypes.bind(this)\r\n        this.choiceSubtype = this.choiceSubtype.bind(this)\r\n        this.choiceType = this.choiceType.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://api.pokemontcg.io/v1/types')\r\n            .then(res => { this.setState({ cardTypes: res.data.types, cardTypesCopy: res.data.types }) })\r\n            .catch(e => { console.warn(e) })\r\n        axios.get('https://api.pokemontcg.io/v1/subtypes')\r\n            .then(res => { this.setState({ cardSubTypes: res.data.subtypes, cardSubTypesCopy: res.data.subtypes }) })\r\n            .catch(e => { console.warn(e) })\r\n    }\r\n\r\n    toggleSubTypeList() {\r\n        this.setState((state) => ({\r\n            subTypeListVisible: this.state.currentType !== 'Types' || this.props.currentPage !== 1 ? state.subTypeListVisible : !state.subTypeListVisible,\r\n            cardSubTypes: state.cardSubTypesCopy\r\n        }))\r\n    }\r\n\r\n    toggleTypeList() {\r\n        this.setState((state) => ({\r\n            typeListVisible: this.state.currentSubType !== 'Subtypes' || this.props.currentPage !== 1 ? state.typeListVisible : !state.typeListVisible,\r\n            cardTypes: state.cardTypesCopy\r\n        }))\r\n    }\r\n\r\n    setTypeCards(event) {\r\n        this.setState({ currentType: event.target.value})\r\n        this.props.types(event.target.value)\r\n    }\r\n\r\n    setSubTypeCards(event) {\r\n        this.setState({ currentSubType: event.target.value})\r\n        this.props.subTypes(event.target.value)\r\n    }\r\n\r\n    setSubTypeInput(event) {\r\n        event.stopPropagation()\r\n    }\r\n\r\n    setTypeInput(event) {\r\n        event.stopPropagation()\r\n    }\r\n\r\n    filterSubTypes(event) {\r\n        const cardSubTypes = JSON.parse(JSON.stringify(this.state.cardSubTypesCopy))\r\n        this.setState({ cardSubTypes: cardSubTypes.filter(type => type.toUpperCase().match('^' + event.target.value.toUpperCase())) })\r\n    }\r\n\r\n    filterTypes(event) {\r\n        const cardTypes = JSON.parse(JSON.stringify(this.state.cardTypesCopy))\r\n        this.setState({ cardTypes: cardTypes.filter(type => type.toUpperCase().match('^' + event.target.value.toUpperCase())) })\r\n    }\r\n\r\n    choiceSubtype(event) {\r\n        this.setState((state) => ({ currentSubType: event.target.textContent }))\r\n        this.props.subTypes(event.target.textContent)\r\n    }\r\n\r\n    choiceType(event) {\r\n        this.setState((state) => ({ currentType: event.target.textContent }))\r\n        this.props.types(event.target.textContent)\r\n    }\r\n\r\n    render() {\r\n        let typesArray = this.state.cardTypes.reduce(function(preVal, type, index) {\r\n            if(index === 0) {\r\n                preVal.push('Types')\r\n                preVal.push(type)\r\n            } else preVal.push(type)\r\n            return preVal\r\n        }, [])\r\n        let subTypesArray = this.state.cardSubTypes.reduce(function(preVal, type, index) {\r\n            if(index === 0) {\r\n                preVal.push('Subtypes')\r\n                preVal.push(type)\r\n            } else preVal.push(type)\r\n            return preVal\r\n        }, [])\r\n        const typeFilterField = this.state.typeListVisible ? <input className=\"navigation-search-list-input\" placeholder=\"Enter value\" onClick={this.setTypeInput} onChange={this.filterTypes}/> : null\r\n        const subTypeFilterField = this.state.subTypeListVisible ? <input className=\"navigation-search-list-input\" placeholder=\"Enter value\" onClick={this.setSubTypeInput} onChange={this.filterSubTypes}/> : null\r\n        const typesList = this.state.typeListVisible ? typesArray.map((subType) => <div className=\"navigation-search-list-subtypes-item\" onClick={this.choiceType}>{subType}</div>) : null\r\n        const subtypesList = this.state.subTypeListVisible ? subTypesArray.map((subType) => <div className=\"navigation-search-list-subtypes-item\" onClick={this.choiceSubtype}>{subType}</div>) : null\r\n        const typesCopy = [subTypeFilterField, <div className=\"navigation-search-list-subtypes\">{subtypesList}</div>]\r\n        const subtypesCopy = [typeFilterField, <div className=\"navigation-search-list-subtypes\">{typesList}</div>]\r\n        const typeFilter = <div className=\"navigation-search\" onClick={this.toggleTypeList}>\r\n                                <span className=\"navigation-search-value\">{this.state.currentType}</span>\r\n                                <div className=\"navigation-search-list\">{subtypesCopy}</div>\r\n                            </div>\r\n        const subTypeFilter = this.state.typeListVisible\r\n            ? null\r\n            : <div className=\"navigation-search\" onClick={this.toggleSubTypeList}>\r\n                 <span className=\"navigation-search-value\">{this.state.currentSubType}</span>\r\n                 <div className=\"navigation-search-list\">{typesCopy}</div>\r\n              </div>\r\n        return (\r\n            <div className=\"navigation\">{typeFilter}{subTypeFilter}</div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../../styles/CardTable.scss'\r\nimport {CardObject} from \"../Card/CardObject\";\r\nimport axios from \"axios\";\r\nimport {Pagination} from \"../Pagination\";\r\nimport {CurrentCard} from \"../Card/CurrentCard\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n    withRouter,\r\n    Link,\r\n} from \"react-router-dom\"\r\nimport {Navigation} from \"./Navigation\";\r\n\r\nexport class CardTable extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cards: [],\r\n            totalCount: 0,\r\n            pageSize: 0,\r\n            types: null,\r\n            subTypes: null,\r\n            currentPage: 1\r\n        }\r\n        this.setCards = this.setCards.bind(this)\r\n        this.setTypes = this.setTypes.bind(this)\r\n        this.setSubTypes = this.setSubTypes.bind(this)\r\n        this.setCurrentPage = this.setCurrentPage.bind(this)\r\n    }\r\n\r\n    setCards(previousCards) {\r\n        this.setState({ cards: previousCards })\r\n    }\r\n\r\n    setCurrentPage(currentPage) {\r\n        this.setState({ currentPage })\r\n    }\r\n\r\n    setTypes(types) {\r\n        this.setState({ types })\r\n        axios.get('https://api.pokemontcg.io/v1/cards', {\r\n            params: { page: 1, types: types === 'Types' ? null : types },\r\n        })\r\n            .then(res => {\r\n                const cards = res.data.cards\r\n                this.setState({\r\n                    cards,\r\n                    totalCount: res.headers['total-count'],\r\n                    pageSize: res.headers['page-size']\r\n                })\r\n            })\r\n    }\r\n\r\n    setSubTypes(subTypes) {\r\n        this.setState({ subTypes })\r\n        axios.get('https://api.pokemontcg.io/v1/cards', {\r\n            params: { page: 1, subtype: subTypes === 'Subtypes' ? null : subTypes }\r\n        })\r\n            .then(res => {\r\n                const cards = res.data.cards\r\n                this.setState({\r\n                    cards,\r\n                    totalCount: res.headers['total-count'],\r\n                    pageSize: res.headers['page-size']\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://api.pokemontcg.io/v1/cards', { params: { page: 1 }})\r\n            .then(res => {\r\n                const cards = res.data.cards\r\n                this.setState({\r\n                    cards,\r\n                    totalCount: res.headers['total-count'],\r\n                    pageSize: res.headers['page-size']\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let CardObjects = null\r\n        if(this.state.cards.length) CardObjects = this.state.cards.map(function(card, key) {\r\n            return <CardObject card={card} />\r\n        })\r\n        return (\r\n                <div className=\"card_table\">\r\n                    <Navigation\r\n                        types={this.setTypes}\r\n                        subTypes={this.setSubTypes}\r\n                        currentPage={this.state.currentPage}\r\n                    />\r\n                    <div className=\"card_table-content\">\r\n                        <div className=\"card_table-content-cards\">{CardObjects}</div>\r\n                        <Pagination\r\n                            setCards={this.setCards}\r\n                            currentPage={this.setCurrentPage}\r\n                            totalCount={this.state.totalCount}\r\n                            pageSize={this.state.pageSize}\r\n                            type={this.state.types === 'Types' ? null : this.state.types}\r\n                            subtype={this.state.subTypes === 'Subtypes' ? null : this.state.subTypes}\r\n                        />\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport '../styles/Login.scss'\r\n\r\nexport class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { login: null, password: null, currentLogin: 'kode@kode.ru', currentPassword: 'Enk0deng', accept: false }\r\n        this.setLogin = this.setLogin.bind(this)\r\n        this.setPassword = this.setPassword.bind(this)\r\n    }\r\n\r\n    setLogin(event) {\r\n        this.setState((state) => ({\r\n            login: event.target.value,\r\n            accept: event.target.value === state.currentLogin && state.password === state.currentPassword\r\n        }))\r\n        if(this.state.accept) localStorage.setItem('login', this.state.login)\r\n    }\r\n\r\n    setPassword(event) {\r\n        this.setState((state) => ({\r\n            password: event.target.value,\r\n            accept: state.login === state.currentLogin && event.target.value === state.currentPassword\r\n        }))\r\n        if(this.state.accept) localStorage.setItem('password', this.state.password)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState((state) => ({\r\n            login: localStorage.getItem('login'),\r\n            password: localStorage.getItem('password'),\r\n            accept: localStorage.getItem('login') === state.currentLogin && localStorage.getItem('password') === state.currentPassword\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const button = this.state.accept\r\n                        ? <Link to={`/otp`}><div className=\"login-container-button\"/></Link>\r\n                        : <div className=\"login-container-button_disabled\"/>\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"login-container\">\r\n                    <div className=\"login-container-email\">\r\n                        <span className=\"login-container-email-title\">Login</span>\r\n                        <input className=\"login-container-email-value\" placeholder={this.state.login ? this.state.login : 'Enter login'} onKeyUp={this.setLogin} />\r\n                    </div>\r\n                    <div className=\"login-container-password\">\r\n                        <span className=\"login-container-password-title\">Password</span>\r\n                        <input className=\"login-container-password-value\" type=\"password\" placeholder={this.state.password ? 'Correct password' : 'Enter password'} onKeyUp={this.setPassword} />\r\n                    </div>\r\n                    <div>{button}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport otpGenerator from 'otp-generator'\r\nimport '../styles/Login.scss'\r\n\r\nexport class OneTimePassword extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { otpPassword: null, password: null, accept: false }\r\n        this.setPassword = this.setPassword.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const password = otpGenerator.generate(6, {digits: true, alphabets: true, upperCase: true, specialChars: false})\r\n        this.setState( { otpPassword: password })\r\n        alert(`Save your password: ${password}`)\r\n    }\r\n\r\n    setPassword(event) {\r\n        this.setState({password: event.target.value})\r\n        this.setState((state) => ({ accept: event.target.value === state.otpPassword }))\r\n    }\r\n\r\n    render() {\r\n        const button = this.state.accept\r\n            ? <Link to={`/cards`}>\r\n                <div className=\"login-container-button\"/>\r\n            </Link>\r\n            : <div className=\"login-container-button_disabled\"/>\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"login-container\">\r\n                    <div className=\"login-container-email\">\r\n                        <span className=\"login-container-email-title\">Code from SMS</span>\r\n                        <input className=\"login-container-email-value\" placeholder=\"Enter login\"\r\n                               onKeyUp={this.setPassword}/>\r\n                    </div>\r\n                    <div>{button}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './styles/App.scss';\r\nimport {Header} from \"./components/Header\";\r\nimport {CardTable} from \"./components/Cards/CardsTable\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"\r\nimport {CurrentCard} from \"./components/Card/CurrentCard\";\r\nimport {Login} from \"./components/Login\";\r\nimport {OneTimePassword} from \"./components/OneTimePassword\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                 <Router>\r\n                     <Switch>\r\n                          <Route exact path=\"/login\">\r\n                               <Login />\r\n                          </Route>\r\n                         <Route exact path=\"/otp\">\r\n                             <OneTimePassword />\r\n                         </Route>\r\n                         <Route exact path=\"/cards\">\r\n                             <Header backButton={false}/>\r\n                             <CardTable />\r\n                         </Route>\r\n                         <Route exact path=\"/cards/:id\">\r\n                             <Header backButton={true}/>\r\n                             <CurrentCard/>\r\n                         </Route>\r\n                     </Switch>\r\n                     <Redirect from='/' to='/login'/>\r\n                 </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nrender(\r\n    <BrowserRouter >\r\n        <App />\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}